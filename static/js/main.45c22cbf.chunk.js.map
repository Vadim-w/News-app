{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Modal/Modal.module.scss","features/news/News.module.scss","features/news/post/Post.module.scss","app/App.module.css","components/ButtonCommon/ButtonCommon.module.scss","components/Input/Input.module.scss","components/Button.module.scss","features/main/Main.module.scss","components/Navbar/MenuItems.ts","components/Button.tsx","app/app-reducer.ts","components/Navbar/Navbar.tsx","features/main/Main.tsx","components/Input/Input.tsx","components/ButtonCommon/ButtonCommon.tsx","features/news/post/Post.tsx","features/news/news-reducer.ts","features/news/News.tsx","components/Modal/Modal.tsx","app/App.tsx","store/store.ts","index.tsx"],"names":["module","exports","MenuItems","title","url","Button","children","onClick","className","styles","btn","initialState","userType","isAuthorization","userLogin","error","setUserTypeAC","type","setIsAuthorizationAC","authorization","setUserLoginAC","setErrorAC","Navbar","openModalLogin","useSelector","state","app","useState","clicked","setClicked","dispatch","useDispatch","NavbarItems","NavbarItems__logo","NavbarItems__fabFaNews","NavbarItems__menuIcon","NavbarItems__faFaTimes","NavbarItems__faFaBars","NavbarItems__navMenuActive","NavbarItems__navMenu","map","item","index","to","NavbarItems__NavLinks","Main","greetingBlock","Input","props","inputText","value","onChange","onKeyPress","e","key","actionEnter","name","placeholder","ButtonCommon","action","mode","disabled","Post","text","date","postID","approved","approvePost","deletePost","postBlock","postBlock__title","postBlock__text","postBlock__date","postBlock__buttons","news","id","v1","News","formik","useFormik","initialValues","onSubmit","values","post","moment","format","addPostAC","resetForm","validate","errors","cNews","setCNews","valueSearch","setValueSearch","useEffect","useCallback","approvePostAC","deletePostAC","filter","p","searchValue","currentTarget","toLowerCase","copiedNews","indexOf","formBlock","getFieldProps","formBlock__errorInput","formBlock__buttonSubmit","handleSubmit","newsBlock","Modal","onClose","duration","showCloseBtn","modal","useRef","modalBg","modalContent","document","body","style","overflow","current","classList","add","transitionDuration","setTimeout","opacity","top","remove","modalCloseHandler","ref","modal__bg","modal__inner","modal__head","modal__body","modal__foot","App","isModalOpened","setIsModalOpened","login","password","exact","path","render","spanError","rootReducer","combineReducers","store","createStore","window","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45c22cbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavbarItems\":\"Navbar_NavbarItems__3rj_u\",\"NavbarItems__logo\":\"Navbar_NavbarItems__logo__3ksmk\",\"NavbarItems__fabFaNews\":\"Navbar_NavbarItems__fabFaNews__3VhWe\",\"NavbarItems__menuIcon\":\"Navbar_NavbarItems__menuIcon__q-VY0\",\"NavbarItems__faFaBars\":\"Navbar_NavbarItems__faFaBars__3K12H\",\"NavbarItems__navMenu\":\"Navbar_NavbarItems__navMenu__1rbD1\",\"NavbarItems__navMenuActive\":\"Navbar_NavbarItems__navMenuActive__3ya70\",\"NavbarItems__NavLinks\":\"Navbar_NavbarItems__NavLinks__2WNII\",\"NavbarItems__faFaTimes\":\"Navbar_NavbarItems__faFaTimes__1Nimb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1BzV_\",\"modal__bg\":\"Modal_modal__bg__1TN-n\",\"modal__inner\":\"Modal_modal__inner__AUTht\",\"modal__head\":\"Modal_modal__head__1Rcc0\",\"modal__body\":\"Modal_modal__body__vlJ3z\",\"modal__foot\":\"Modal_modal__foot__33vk_\",\"disable-click\":\"Modal_disable-click__3sTY0\",\"btn\":\"Modal_btn__1Ho_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBlock\":\"News_formBlock__rBJxY\",\"formBlock__errorInput\":\"News_formBlock__errorInput__1691k\",\"formBlock__buttonSubmit\":\"News_formBlock__buttonSubmit__3Iy3U\",\"newsBlock\":\"News_newsBlock__UU6BR\",\"title\":\"News_title__kr74_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Post_postBlock__2KqnF\",\"postBlock__title\":\"Post_postBlock__title__1qYVB\",\"postBlock__text\":\"Post_postBlock__text__3bpmO\",\"postBlock__date\":\"Post_postBlock__date__3uWYl\",\"postBlock__buttons\":\"Post_postBlock__buttons__HTyY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanError\":\"App_spanError__37Kd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ButtonCommon_btn__2JDPH\",\"error\":\"ButtonCommon_error__2MHuK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"Input_inputText__2IR2o\",\"error\":\"Input_error__4Pyx4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__oiZ53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greetingBlock\":\"Main_greetingBlock__3XLPg\"};","\r\nexport const MenuItems = [\r\n    {\r\n        title: 'Home',\r\n        url: '/',\r\n    },\r\n    {\r\n        title: 'News',\r\n        url: '/news',\r\n    }\r\n]","import React, {FC, ReactNode} from \"react\";\r\nimport styles from \"./Button.module.scss\";\r\n\r\ntype ButtonProps = {\r\n    children: ReactNode\r\n    onClick: () => void\r\n}\r\n\r\nexport const Button: FC<ButtonProps> = ({children, onClick}) => {\r\n    return (\r\n        <button className={styles.btn} onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","\r\nconst initialState: initialStateType = {\r\n    userType: 'guest',\r\n    isAuthorization: false,\r\n    userLogin: '',\r\n    error: ''\r\n}\r\n\r\nexport const appReducer = (state: initialStateType = initialState, action: ActionTypes):initialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_TYPE':\r\n            return {...state, userType: action.userType}\r\n        case 'SET_IS_AUTHORISATION':\r\n            return {...state, isAuthorization: action.authorization}\r\n        case 'SET_USER_LOGIN':\r\n            return {...state, userLogin: action.userLogin}\r\n        case 'SET_ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionCreators\r\nexport const setUserTypeAC = (userType: userTypes) => ({type: 'SET_USER_TYPE', userType} as const)\r\nexport const setIsAuthorizationAC = (authorization: boolean) => ({type: 'SET_IS_AUTHORISATION', authorization} as const)\r\nexport const setUserLoginAC = (userLogin: string) => ({type: 'SET_USER_LOGIN', userLogin} as const)\r\nexport const setErrorAC = (error: string) => ({type: 'SET_ERROR', error} as const)\r\n\r\n//types\r\ntype initialStateType = {\r\n    userType: userTypes\r\n    isAuthorization: boolean\r\n    userLogin: string\r\n    error: string\r\n}\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof setUserTypeAC>\r\n    | ReturnType<typeof setIsAuthorizationAC>\r\n    | ReturnType<typeof setUserLoginAC>\r\n    | ReturnType<typeof setErrorAC>\r\n\r\nexport type userTypes = 'guest' | 'user' | 'admin'\r\n","import React, {FC, useState} from \"react\";\r\nimport styles from \"./Navbar.module.scss\";\r\nimport {MenuItems} from \"./MenuItems\";\r\nimport {Button} from \"../Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {setIsAuthorizationAC, setUserLoginAC, setUserTypeAC} from \"../../app/app-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype navBarPropsType = {\r\n    openModalLogin: () => void\r\n}\r\n\r\n\r\nexport const Navbar: FC<navBarPropsType> = ({openModalLogin}) => {\r\n    const isAuthorization = useSelector<AppRootStateType, boolean>(state => state.app.isAuthorization)\r\n    const [clicked, setClicked] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        setClicked(!clicked)\r\n    }\r\n    const onLogOut = () => {\r\n        dispatch(setIsAuthorizationAC(false))\r\n        dispatch(setUserTypeAC('guest'))\r\n        dispatch(setUserLoginAC(''))\r\n    }\r\n\r\n    return (\r\n        <nav className={styles.NavbarItems}>\r\n            <h1 className={styles.NavbarItems__logo}>News <i className={styles.NavbarItems__fabFaNews}></i></h1>\r\n            <div className={styles.NavbarItems__menuIcon} onClick={handleClick}>\r\n                <i className={clicked ? `fas fa-times ${styles.NavbarItems__faFaTimes}` : `fas fa-bars  ${styles.NavbarItems__faFaBars}`}></i>\r\n            </div>\r\n            <ul className={clicked ? styles.NavbarItems__navMenuActive : styles.NavbarItems__navMenu}>\r\n                {MenuItems.map((item, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <NavLink to={item.url} className={styles.NavbarItems__NavLinks}>\r\n                                {item.title}\r\n                            </NavLink>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            {isAuthorization ? <Button onClick={onLogOut}>Log out</Button> :\r\n                <Button onClick={openModalLogin}>Log in</Button>}\r\n        </nav>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport styles from \"./Main.module.scss\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\nexport const Main = () => {\r\n    const isAuthorization = useSelector<AppRootStateType, boolean>(state => state.app.isAuthorization)\r\n    const userLogin = useSelector<AppRootStateType, string>(state => state.app.userLogin)\r\n\r\n    return (\r\n        <div className={styles.greetingBlock}>\r\n            <h2> {isAuthorization ? `Привет, ${userLogin}!` : 'Привет, Гость!'}</h2>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport styles from \"./Input.module.scss\"\r\n\r\ntype InputTextTypeProps = {\r\n    value: string\r\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    actionEnter?: () => void;\r\n    error?: boolean\r\n    name?: string\r\n    placeholder?: string\r\n    type: string\r\n\r\n}\r\n\r\nexport const Input = (props: InputTextTypeProps) => {\r\n    const actionEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter' && props.actionEnter) {\r\n            props.actionEnter();\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <input className={`${styles.inputText} ${props.error && props.value !== '' ? styles.error : ''}`}\r\n                   type={props.type}\r\n                   value={props.value}\r\n                   onChange={props.onChange}\r\n                   onKeyPress={actionEnter}\r\n                   name={props.name}\r\n                   placeholder={props.placeholder}\r\n            />\r\n        </>\r\n    );\r\n}","import React, {FC} from \"react\";\r\nimport styles from \"./ButtonCommon.module.scss\"\r\n\r\ntype ButtonPropsType = {\r\n    value: string\r\n    action: () => void\r\n    mode?: 'red' | null\r\n    type?: 'button' | 'submit' | 'reset' | undefined\r\n    disabled?: boolean\r\n}\r\n\r\nexport const ButtonCommon: FC<ButtonPropsType> = ({value, action, mode, type, disabled}) => {\r\n    return (\r\n        <button\r\n            className={mode === 'red' ? `${styles.btn}  ${styles.error}` : styles.btn}\r\n            onClick={action}\r\n            type={type}\r\n            disabled={disabled}>\r\n            {value}\r\n        </button>\r\n    );\r\n}","import React, {FC} from \"react\";\r\nimport styles from \"./Post.module.scss\";\r\nimport {ButtonCommon} from \"../../../components/ButtonCommon/ButtonCommon\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {userTypes} from \"../../../app/app-reducer\";\r\n\r\ntype postPropsType = {\r\n    postID: string\r\n    title: string\r\n    text: string\r\n    date: string\r\n    approved: boolean\r\n    approvePost: (postID: string) => void\r\n    deletePost: (postID: string) => void\r\n}\r\n\r\nexport const Post: FC<postPropsType> = ({title, text, date, postID, approved, approvePost, deletePost}) => {\r\n\r\n    const userType = useSelector<AppRootStateType, userTypes>(state => state.app.userType)\r\n\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <h3 className={styles.postBlock__title}>{title}</h3>\r\n            <p className={styles.postBlock__text}>{text}</p>\r\n            <span className={styles.postBlock__date}>{date}</span>\r\n            {(userType === 'admin' && !approved) && <div className={styles.postBlock__buttons}>\r\n                <ButtonCommon value={'approve'} action={() => approvePost(postID)}/>\r\n                <ButtonCommon value={'delete'} action={() => deletePost(postID)} mode={'red'}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import {v1} from \"uuid\";\r\n\r\nconst initialState: initialStateType = {\r\n    news: [\r\n        {\r\n            id: v1(),\r\n            title: 'Пост о погоде 1',\r\n            text: 'сегодня на улице прохладно',\r\n            date: 'Nov 11, 2020 3:21 PM',\r\n            approved: false\r\n        },\r\n        {\r\n            id: v1(),\r\n            title: 'Новость о погоде 2',\r\n            text: 'сегодня на улице тепло',\r\n            date: 'Nov 11, 2020 3:00 PM',\r\n            approved: false\r\n        },\r\n        {\r\n            id: v1(),\r\n            title: 'Новость 1',\r\n            text: 'сегодня на улице жарко',\r\n            date: 'Nov 11, 2020 2:25 PM',\r\n            approved: true\r\n        },\r\n        {\r\n            id: v1(),\r\n            title: 'Новость 2',\r\n            text: 'сегодня на улице ветренно',\r\n            date: 'Nov 11, 2020 2:00 PM',\r\n            approved: false\r\n        },\r\n        {\r\n            id: v1(),\r\n            title: 'Новость 3',\r\n            text: 'сегодня на улице пасмурно',\r\n            date: 'Nov 11, 2020 1:59 PM',\r\n            approved: true\r\n        },\r\n        {\r\n            id: v1(),\r\n            title: 'Новость 4',\r\n            text: 'сегодня на улице ясно',\r\n            date: 'Nov 11, 2020 1:32 PM',\r\n            approved: false\r\n        },\r\n    ]\r\n}\r\n\r\n\r\nexport const newsReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case 'DELETE_POST':\r\n            return {...state, news: state.news.filter((p) => p.id !== action.postID)}\r\n        case 'ADD_POST':\r\n            return {...state, news: [action.post, ...state.news]}\r\n        case 'APPROVE_POST':\r\n              return  { ...state,\r\n                news: state.news.map((p) => {\r\n                    if (p.id === action.postID) {\r\n                        return {...p, approved: true}\r\n                    } else {\r\n                        return p\r\n                    }\r\n                })}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionCreators\r\nexport const addPostAC = (post: postType) => ({type: 'ADD_POST', post} as const)\r\nexport const approvePostAC = (postID: string) => ({type: 'APPROVE_POST', postID} as const)\r\nexport const deletePostAC = (postID: string) => ({type: 'DELETE_POST', postID} as const)\r\n\r\n//types\r\ntype initialStateType = {\r\n    news: Array<postType>\r\n}\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof approvePostAC>\r\n    | ReturnType<typeof deletePostAC>\r\n\r\nexport type postType = {\r\n    id: string\r\n    title: string\r\n    text: string\r\n    date: string\r\n    approved: boolean\r\n}","import React, {ChangeEvent, useCallback, useEffect, useState} from \"react\";\r\nimport styles from \"./News.module.scss\";\r\nimport {Input} from \"../../components/Input/Input\";\r\nimport {ButtonCommon} from \"../../components/ButtonCommon/ButtonCommon\";\r\nimport {useFormik} from \"formik\";\r\nimport {Post} from \"./post/Post\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {addPostAC, approvePostAC, deletePostAC, postType} from \"./news-reducer\";\r\nimport {userTypes} from \"../../app/app-reducer\";\r\nimport {v1} from \"uuid\";\r\nimport moment from 'moment';\r\n\r\n\r\nexport const News = () => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: '',\r\n            text: ''\r\n        },\r\n\r\n        onSubmit: values => {\r\n            let post: postType = {\r\n                id: v1(),\r\n                title: values.title,\r\n                text: values.text,\r\n                approved: false,\r\n                date: moment().format('lll')\r\n            }\r\n            dispatch(addPostAC(post))\r\n            formik.resetForm();\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.title) {\r\n                errors.title = 'Required';\r\n            }\r\n            if (!values.text) {\r\n                errors.text = 'Required';\r\n            }\r\n            return errors;\r\n        },\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n    let news = useSelector<AppRootStateType, Array<postType>>(state => state.news.news)\r\n    const userType = useSelector<AppRootStateType, userTypes>(state => state.app.userType)\r\n\r\n    const [cNews, setCNews] = useState(news)\r\n    const [valueSearch, setValueSearch] = useState('')\r\n\r\n    useEffect( ()=> {\r\n        setCNews(news)\r\n    }, [news, userType] )\r\n\r\n\r\n    const approvePost = useCallback((postID: string) => {\r\n        dispatch(approvePostAC(postID))\r\n    }, [])\r\n    const deletePost = (postID: string) => {\r\n        dispatch(deletePostAC(postID))\r\n    }\r\n\r\n\r\n    if(userType === 'guest') {\r\n        news = news.filter((p) => p.approved)\r\n    }\r\n\r\n    const searchInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        debugger\r\n        let searchValue = (e.currentTarget.value).toLowerCase()\r\n        setValueSearch(searchValue)\r\n\r\n        let copiedNews = news.filter((p) => {\r\n            return p.title.toLowerCase().indexOf(searchValue) > -1\r\n        })\r\n        setCNews(copiedNews)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>News</h2>\r\n            <div>\r\n                <Input\r\n                    placeholder={'search news'}\r\n                    value={valueSearch}\r\n                    onChange={searchInputHandler}\r\n                    type={'text'}\r\n                />\r\n            </div>\r\n            { userType === 'user' && <div className={styles.formBlock}>\r\n                <form>\r\n                    <Input placeholder={'title'}\r\n                           type={'text-area'}\r\n                           {...formik.getFieldProps('title')}\r\n                    />\r\n                    {formik.errors.title && <div className={styles.formBlock__errorInput}>{formik.errors.title}</div>}\r\n                    <Input placeholder={'text'}\r\n                           type={'text'}\r\n                           {...formik.getFieldProps('text')}\r\n                    />\r\n                    {formik.errors.text && <div className={styles.formBlock__errorInput}>{formik.errors.text}</div>}\r\n                    <div className={styles.formBlock__buttonSubmit}>\r\n                        <ButtonCommon disabled={false} type='submit' value='add news' action={formik.handleSubmit}/>\r\n                    </div>\r\n                </form>\r\n            </div>}\r\n            <div className={styles.newsBlock}>\r\n                {cNews.map((post) => {\r\n                   return <Post\r\n                       key={post.id}\r\n                       postID={post.id}\r\n                       title={post.title}\r\n                       text={post.text}\r\n                       date={post.date}\r\n                       approved={post.approved}\r\n                       approvePost={approvePost}\r\n                       deletePost={deletePost}\r\n                   />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype FormikErrorType = {\r\n    title?: string\r\n    text?: string\r\n}","import React, {useEffect, useRef, FC, ReactNode} from \"react\";\r\nimport styles from \"./Modal.module.scss\"\r\n\r\ntype ModalProps = {\r\n    title: string;\r\n    children: ReactNode;\r\n    onClose: () => void;\r\n    duration?: number;\r\n    showCloseBtn?: boolean;\r\n}\r\n\r\nexport const Modal: FC<ModalProps> = ({title, children, onClose, duration = 300, showCloseBtn}) => {\r\n    const modal = useRef<HTMLDivElement>(null);\r\n    const modalBg = useRef<HTMLDivElement>(null);\r\n    const modalContent = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        document.body.style.overflow = 'hidden';\r\n        if (modal.current) {\r\n            modal.current.classList.add('disable-click');\r\n        }\r\n        if (modalBg.current) {\r\n            modalBg.current.style.transitionDuration = duration + 'ms';\r\n        }\r\n        if (modalContent.current) {\r\n            modalContent.current.style.transitionDuration = duration + 'ms';\r\n        }\r\n\r\n        setTimeout(() => {\r\n            if (modalBg.current) {\r\n                modalBg.current.style.opacity = 0.2 + '';\r\n            }\r\n            if (modalContent.current) {\r\n                modalContent.current.style.opacity = 1 + '';\r\n                modalContent.current.style.top = 0 + '';\r\n            }\r\n        }, 20);\r\n\r\n        setTimeout(() => {\r\n            if (modal.current) {\r\n                modal.current.classList.remove('disable-click');\r\n            }\r\n        }, duration + 20);\r\n\r\n        return () => {\r\n            document.body.style.overflow = 'visible';\r\n        }\r\n    }, [duration]);\r\n\r\n    const modalCloseHandler = () => {\r\n        if (modal.current) {\r\n            modal.current.classList.add('disable-click');\r\n        }\r\n        if (modalBg.current) {\r\n            modalBg.current.style.opacity = 0 + '';\r\n        }\r\n        if (modalContent.current) {\r\n            modalContent.current.style.opacity = 0 + '';\r\n            modalContent.current.style.top = '-100px';\r\n        }\r\n\r\n        setTimeout(() => {\r\n            if (modal.current) {\r\n                modal.current.classList.remove('disable-click');\r\n            }\r\n            onClose();\r\n        }, duration);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.modal} ref={modal}>\r\n            <div className={styles.modal__bg} onClick={modalCloseHandler} ref={modalBg}></div>\r\n            <div className={styles.modal__inner} ref={modalContent}>\r\n                <div className={styles.modal__head}>\r\n                    <h2>{title}</h2>\r\n                    {showCloseBtn && <button className={styles.btn} onClick={modalCloseHandler}>&times;</button>}\r\n                </div>\r\n                <div className={styles.modal__body}>\r\n                    {children}\r\n                </div>\r\n                <div className={styles.modal__foot}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\nimport \"./App.module.css\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {Navbar} from \"../components/Navbar/Navbar\";\nimport {Main} from \"../features/main/Main\";\nimport {News} from \"../features/news/News\";\nimport {Modal} from \"../components/Modal/Modal\";\nimport {Input} from \"../components/Input/Input\";\nimport {useFormik} from \"formik\";\nimport {ButtonCommon} from \"../components/ButtonCommon/ButtonCommon\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setErrorAC, setIsAuthorizationAC, setUserLoginAC, setUserTypeAC} from \"./app-reducer\";\nimport {AppRootStateType} from \"../store/store\";\nimport styles from \"./App.module.css\"\n\nfunction App() {\n    const [isModalOpened, setIsModalOpened] = useState(false)\n    const error = useSelector<AppRootStateType, string>(state => state.app.error)\n    const dispatch = useDispatch()\n\n    const openModalLogin = () => {\n        setIsModalOpened(true)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            login: '',\n            password: ''\n        },\n\n        onSubmit: values => {\n            if (values.login === 'Admin' && values.password === 'passwordAdmin') {\n                dispatch(setUserTypeAC('admin'))\n                dispatch(setIsAuthorizationAC(true))\n                dispatch(setUserLoginAC(values.login))\n                setIsModalOpened(false)\n                dispatch(setErrorAC(''))\n            } else if (values.login === 'User' && values.password === 'passwordUser') {\n                dispatch(setUserTypeAC('user'))\n                dispatch(setIsAuthorizationAC(true))\n                dispatch(setUserLoginAC(values.login))\n                setIsModalOpened(false)\n                dispatch(setErrorAC(''))\n            } else {\n                dispatch(setErrorAC('Incorrect login or password'))\n            }\n            formik.resetForm();\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.login) {\n                errors.login = 'Required';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            }\n            return errors;\n        },\n    })\n\n    return (\n        <div className='App'>\n            <Navbar openModalLogin={openModalLogin}/>\n            <Switch>\n                <Route exact path={'/'} render={() => <Main/>}/>\n                <Route path={'/news'} render={() => <News/>}/>\n                <Route path={'*'} render={()=> <h1>404</h1>}/>\n            </Switch>\n\n\n            {isModalOpened &&\n            <Modal title={'Log in'} onClose={() => {\n                setIsModalOpened(false)\n            }} duration={600} showCloseBtn>\n                <div className={'styles.loginForm'}>\n                    <form>\n                        <Input placeholder={'Login'}\n                               type={'text'}\n                               {...formik.getFieldProps('login')}\n                        />\n                        {formik.errors.login && <div className={styles.spanError}>{formik.errors.login}</div>}\n                        <Input placeholder={'Password'}\n                               type={'password'}\n                               {...formik.getFieldProps('password')}\n                        />\n                        {formik.errors.password && <div className={styles.spanError}>{formik.errors.password}</div>}\n                        <div>\n                            <ButtonCommon value={'login'} action={formik.handleSubmit}/>\n                        </div>\n                    </form>\n                    {error && <span className={styles.spanError}>{error}</span>}\n                </div>\n            </Modal>\n            }\n        </div>\n    );\n}\n\ntype FormikErrorType = {\n    login?: string\n    password?: string\n}\n\nexport default App;\n","import {combineReducers, createStore } from \"redux\";\r\nimport {appReducer} from \"../app/app-reducer\";\r\nimport {newsReducer} from \"../features/news/news-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    news: newsReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer> ;\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </React.StrictMode>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}